                                Executor
                                   |
                                   |
                             ExecutorService
                                   |
                                   |
                         ScheduledExecutorService
                                   |
                                   |
                          EventExecutorGroup
                            _______|________
                           |                |
                           |                |
                      EventExecutor     EventLoopGroup
                           |                |
                           |                |
                   OrderedEventExecutor     |
                           |________________|
                                    |
                                EventLoop

Executor：java并发包下的顶级接口
ExecutorService: 额外添加了几种任务执行方式，如有返回值的，无返回值的，批量的
ScheduledExecutorService：额外添加了几种可以执行计划任务的接口

可以很清楚的看到netty包下的这些接口层次
一个EventLoopGroup可以持有多个EventLoop，而一个EventLoop则可以处理多个Channel的事件(不再是一个连接一个线程)
EventLoopGroup不仅仅是为了组合多个EventLoop而存在的类，它还负责为每个Channel分配一个EventLoop
而分配的算法就是均衡分配，就是顺序遍历这些EventLoop进行分配，所以一个EventLoop可以被分配多个Channel(这一点将来会改变)
一旦Channel被分配给一个EventLoop它在它所有的生命周期内都使用这个EventLoop，所以谨慎使用ThreadLocal！

而之所以可以在多个线程中同时和Channel直接交互，而不用额外的在ChannelHandler中做同步处理的原因
就是EventExecutor提供了判断当前调用线程是否为支撑EventLoop的那个线程，如果是，则直接处理，如果不是则放入内部任务队列，后面执行。
所以需要注意的是，永远不要将一个长时间运行的任务放入执行队列，因为这会阻塞在相同线程上执行的其他任务。
